namespace API.Models;

public enum InventoryType
{
    Fuel = 0,                        // defines.inventory.fuel
    BurntResult = 1,                 // defines.inventory.burnt_result
    Chest = 2,                       // defines.inventory.chest
    FurnaceSource = 3,               // defines.inventory.furnace_source
    FurnaceResult = 4,               // defines.inventory.furnace_result
    FurnaceModules = 5,              // defines.inventory.furnace_modules
    CharacterMain = 6,               // defines.inventory.character_main
    CharacterGuns = 7,               // defines.inventory.character_guns
    CharacterAmmo = 8,               // defines.inventory.character_ammo
    CharacterArmor = 9,              // defines.inventory.character_armor
    CharacterVehicle = 10,           // defines.inventory.character_vehicle
    CharacterTrash = 11,             // defines.inventory.character_trash
    GodMain = 12,                    // defines.inventory.god_main
    EditorMain = 13,                 // defines.inventory.editor_main
    EditorGuns = 14,                 // defines.inventory.editor_guns
    EditorAmmo = 15,                 // defines.inventory.editor_ammo
    EditorArmor = 16,                // defines.inventory.editor_armor
    RoboportRobot = 17,              // defines.inventory.roboport_robot
    RoboportMaterial = 18,           // defines.inventory.roboport_material
    RobotCargo = 19,                 // defines.inventory.robot_cargo
    RobotRepair = 20,                // defines.inventory.robot_repair
    AssemblingMachineInput = 21,     // defines.inventory.assembling_machine_input
    AssemblingMachineOutput = 22,    // defines.inventory.assembling_machine_output
    AssemblingMachineModules = 23,   // defines.inventory.assembling_machine_modules
    LabInput = 24,                   // defines.inventory.lab_input
    LabModules = 25,                 // defines.inventory.lab_modules
    MiningDrillModules = 26,         // defines.inventory.mining_drill_modules
    ItemMain = 27,                   // defines.inventory.item_main
    RocketSiloRocket = 28,           // defines.inventory.rocket_silo_rocket
    RocketSiloResult = 29,           // defines.inventory.rocket_silo_result
    RocketSiloInput = 30,            // defines.inventory.rocket_silo_input
    RocketSiloOutput = 31,           // defines.inventory.rocket_silo_output
    RocketSiloModules = 32,          // defines.inventory.rocket_silo_modules
    Rocket = 33,                     // defines.inventory.rocket
    CarTrunk = 34,                   // defines.inventory.car_trunk
    CarAmmo = 35,                    // defines.inventory.car_ammo
    CargoWagon = 36,                 // defines.inventory.cargo_wagon
    TurretAmmo = 37,                 // defines.inventory.turret_ammo
    BeaconModules = 38,              // defines.inventory.beacon_modules
    CharacterCorpse = 39,            // defines.inventory.character_corpse
    ArtilleryTurretAmmo = 40,        // defines.inventory.artillery_turret_ammo
    ArtilleryWagonAmmo = 41,         // defines.inventory.artillery_wagon_ammo
    SpiderTrunk = 42,                // defines.inventory.spider_trunk
    SpiderAmmo = 43,                 // defines.inventory.spider_ammo
    SpiderTrash = 44                 // defines.inventory.spider_trash
}

public static class InventoryTypeExtensions
{
    public static string GetFactorioValue(this InventoryType inventoryType) => inventoryType switch
    {
        InventoryType.Fuel => "defines.inventory.fuel",
        InventoryType.BurntResult => "defines.inventory.burnt_result",
        InventoryType.Chest => "defines.inventory.chest",
        InventoryType.FurnaceSource => "defines.inventory.furnace_source",
        InventoryType.FurnaceResult => "defines.inventory.furnace_result",
        InventoryType.FurnaceModules => "defines.inventory.furnace_modules",
        InventoryType.CharacterMain => "defines.inventory.character_main",
        InventoryType.CharacterGuns => "defines.inventory.character_guns",
        InventoryType.CharacterAmmo => "defines.inventory.character_ammo",
        InventoryType.CharacterArmor => "defines.inventory.character_armor",
        InventoryType.CharacterVehicle => "defines.inventory.character_vehicle",
        InventoryType.CharacterTrash => "defines.inventory.character_trash",
        InventoryType.GodMain => "defines.inventory.god_main",
        InventoryType.EditorMain => "defines.inventory.editor_main",
        InventoryType.EditorGuns => "defines.inventory.editor_guns",
        InventoryType.EditorAmmo => "defines.inventory.editor_ammo",
        InventoryType.EditorArmor => "defines.inventory.editor_armor",
        InventoryType.RoboportRobot => "defines.inventory.roboport_robot",
        InventoryType.RoboportMaterial => "defines.inventory.roboport_material",
        InventoryType.RobotCargo => "defines.inventory.robot_cargo",
        InventoryType.RobotRepair => "defines.inventory.robot_repair",
        InventoryType.AssemblingMachineInput => "defines.inventory.assembling_machine_input",
        InventoryType.AssemblingMachineOutput => "defines.inventory.assembling_machine_output",
        InventoryType.AssemblingMachineModules => "defines.inventory.assembling_machine_modules",
        InventoryType.LabInput => "defines.inventory.lab_input",
        InventoryType.LabModules => "defines.inventory.lab_modules",
        InventoryType.MiningDrillModules => "defines.inventory.mining_drill_modules",
        InventoryType.ItemMain => "defines.inventory.item_main",
        InventoryType.RocketSiloRocket => "defines.inventory.rocket_silo_rocket",
        InventoryType.RocketSiloResult => "defines.inventory.rocket_silo_result",
        InventoryType.RocketSiloInput => "defines.inventory.rocket_silo_input",
        InventoryType.RocketSiloOutput => "defines.inventory.rocket_silo_output",
        InventoryType.RocketSiloModules => "defines.inventory.rocket_silo_modules",
        InventoryType.Rocket => "defines.inventory.rocket",
        InventoryType.CarTrunk => "defines.inventory.car_trunk",
        InventoryType.CarAmmo => "defines.inventory.car_ammo",
        InventoryType.CargoWagon => "defines.inventory.cargo_wagon",
        InventoryType.TurretAmmo => "defines.inventory.turret_ammo",
        InventoryType.BeaconModules => "defines.inventory.beacon_modules",
        InventoryType.CharacterCorpse => "defines.inventory.character_corpse",
        InventoryType.ArtilleryTurretAmmo => "defines.inventory.artillery_turret_ammo",
        InventoryType.ArtilleryWagonAmmo => "defines.inventory.artillery_wagon_ammo",
        InventoryType.SpiderTrunk => "defines.inventory.spider_trunk",
        InventoryType.SpiderAmmo => "defines.inventory.spider_ammo",
        InventoryType.SpiderTrash => "defines.inventory.spider_trash",
        _ => throw new ArgumentOutOfRangeException(nameof(inventoryType))
    };

    public static string ToApiString(this InventoryType inventoryType) => inventoryType switch
    {
        InventoryType.Fuel => "fuel",
        InventoryType.BurntResult => "burnt_result",
        InventoryType.Chest => "chest",
        InventoryType.FurnaceSource => "furnace_source",
        InventoryType.FurnaceResult => "furnace_result",
        InventoryType.FurnaceModules => "furnace_modules",
        InventoryType.CharacterMain => "main", // Legacy alias
        InventoryType.CharacterGuns => "character_guns",
        InventoryType.CharacterAmmo => "character_ammo",
        InventoryType.CharacterArmor => "character_armor",
        InventoryType.CharacterVehicle => "character_vehicle",
        InventoryType.CharacterTrash => "character_trash",
        InventoryType.GodMain => "god_main",
        InventoryType.EditorMain => "editor_main",
        InventoryType.EditorGuns => "editor_guns",
        InventoryType.EditorAmmo => "editor_ammo",
        InventoryType.EditorArmor => "editor_armor",
        InventoryType.RoboportRobot => "roboport_robot",
        InventoryType.RoboportMaterial => "roboport_material",
        InventoryType.RobotCargo => "robot_cargo",
        InventoryType.RobotRepair => "robot_repair",
        InventoryType.AssemblingMachineInput => "input", // Legacy alias
        InventoryType.AssemblingMachineOutput => "assembling_machine_output",
        InventoryType.AssemblingMachineModules => "assembling_machine_modules",
        InventoryType.LabInput => "lab_input",
        InventoryType.LabModules => "lab_modules",
        InventoryType.MiningDrillModules => "mining_drill_modules",
        InventoryType.ItemMain => "item_main",
        InventoryType.RocketSiloRocket => "rocket_silo_rocket",
        InventoryType.RocketSiloResult => "rocket_silo_result",
        InventoryType.RocketSiloInput => "rocket_silo_input",
        InventoryType.RocketSiloOutput => "rocket_silo_output",
        InventoryType.RocketSiloModules => "rocket_silo_modules",
        InventoryType.Rocket => "rocket",
        InventoryType.CarTrunk => "car_trunk",
        InventoryType.CarAmmo => "car_ammo",
        InventoryType.CargoWagon => "cargo_wagon",
        InventoryType.TurretAmmo => "turret_ammo",
        InventoryType.BeaconModules => "beacon_modules",
        InventoryType.CharacterCorpse => "character_corpse",
        InventoryType.ArtilleryTurretAmmo => "artillery_turret_ammo",
        InventoryType.ArtilleryWagonAmmo => "artillery_wagon_ammo",
        InventoryType.SpiderTrunk => "spider_trunk",
        InventoryType.SpiderAmmo => "spider_ammo",
        InventoryType.SpiderTrash => "spider_trash",
        _ => throw new ArgumentOutOfRangeException(nameof(inventoryType))
    };

    public static InventoryType FromString(string value) => value?.ToLowerInvariant() switch
    {
        "fuel" => InventoryType.Fuel,
        "chest" => InventoryType.Chest,
        "main" => InventoryType.CharacterMain, // Legacy alias
        "input" => InventoryType.AssemblingMachineInput, // Legacy alias
        "burnt_result" => InventoryType.BurntResult,
        "furnace_source" => InventoryType.FurnaceSource,
        "furnace_result" => InventoryType.FurnaceResult,
        "furnace_modules" => InventoryType.FurnaceModules,
        "character_main" => InventoryType.CharacterMain,
        "character_guns" => InventoryType.CharacterGuns,
        "character_ammo" => InventoryType.CharacterAmmo,
        "character_armor" => InventoryType.CharacterArmor,
        "character_vehicle" => InventoryType.CharacterVehicle,
        "character_trash" => InventoryType.CharacterTrash,
        "god_main" => InventoryType.GodMain,
        "editor_main" => InventoryType.EditorMain,
        "editor_guns" => InventoryType.EditorGuns,
        "editor_ammo" => InventoryType.EditorAmmo,
        "editor_armor" => InventoryType.EditorArmor,
        "roboport_robot" => InventoryType.RoboportRobot,
        "roboport_material" => InventoryType.RoboportMaterial,
        "robot_cargo" => InventoryType.RobotCargo,
        "robot_repair" => InventoryType.RobotRepair,
        "assembling_machine_input" => InventoryType.AssemblingMachineInput,
        "assembling_machine_output" => InventoryType.AssemblingMachineOutput,
        "assembling_machine_modules" => InventoryType.AssemblingMachineModules,
        "lab_input" => InventoryType.LabInput,
        "lab_modules" => InventoryType.LabModules,
        "mining_drill_modules" => InventoryType.MiningDrillModules,
        "item_main" => InventoryType.ItemMain,
        "rocket_silo_rocket" => InventoryType.RocketSiloRocket,
        "rocket_silo_result" => InventoryType.RocketSiloResult,
        "rocket_silo_input" => InventoryType.RocketSiloInput,
        "rocket_silo_output" => InventoryType.RocketSiloOutput,
        "rocket_silo_modules" => InventoryType.RocketSiloModules,
        "rocket" => InventoryType.Rocket,
        "car_trunk" => InventoryType.CarTrunk,
        "car_ammo" => InventoryType.CarAmmo,
        "cargo_wagon" => InventoryType.CargoWagon,
        "turret_ammo" => InventoryType.TurretAmmo,
        "beacon_modules" => InventoryType.BeaconModules,
        "character_corpse" => InventoryType.CharacterCorpse,
        "artillery_turret_ammo" => InventoryType.ArtilleryTurretAmmo,
        "artillery_wagon_ammo" => InventoryType.ArtilleryWagonAmmo,
        "spider_trunk" => InventoryType.SpiderTrunk,
        "spider_ammo" => InventoryType.SpiderAmmo,
        "spider_trash" => InventoryType.SpiderTrash,
        _ => throw new ArgumentException($"Invalid inventory type string: {value}")
    };
} 